<Window x:Class="YouTubeTool.Windows.WindowMain"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:explodeModels="clr-namespace:YoutubeExplode.Models;assembly=YoutubeExplode"
		xmlns:viewModels="clr-namespace:YouTubeTool.ViewModels"
		xmlns:views="clr-namespace:YouTubeTool.Views"
		DataContext="{Binding MainViewModel, Source={StaticResource Locator}}"
		Title="{Binding MyTitle}"
		Style="{StaticResource AppWindow}"
		Icon="/YouTubeTool;component/favicon.ico"
		Loaded="Window_Loaded"
		WindowStartupLocation="CenterScreen"
		WindowState="{Binding WindowState, Mode=TwoWay}"
		Left="{Binding X, Mode=TwoWay}" Top="{Binding Y, Mode=TwoWay}"
		Width="{Binding Width, Mode=TwoWay}" Height="{Binding Height, Mode=TwoWay}" MinWidth="1024" MinHeight="576"
		mc:Ignorable="d"
		d:DesignWidth="1024" d:DesignHeight="576">
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding ViewLoadedCommand}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closed">
			<i:InvokeCommandAction Command="{Binding ViewClosedCommand}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="SizeChanged">
			<i:InvokeCommandAction Command="{Binding ViewSizeChangedCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
		<materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
			<materialDesign:DrawerHost.LeftDrawerContent>
				<DockPanel MinWidth="230" Background="{StaticResource MaterialDesignCardBackground}">
					<ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
								  DockPanel.Dock="Top"
								  HorizontalAlignment="Right" Margin="16"
								  IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
					<ListBox x:Name="AppMenuListBox" ItemsSource="{Binding AppMenu}">
						<ListBox.ItemTemplate>
							<DataTemplate DataType="viewModels:HamburgerMenuItem">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>

									<Rectangle Grid.Column="0"
											   Width="6"
											   Fill="{DynamicResource SecondaryAccentBrush}"
											   Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" />
									<StackPanel Grid.Column="1" Orientation="Horizontal" Margin="12 10">
										<materialDesign:PackIcon Kind="{Binding Icon}" Height="30" Width="30" />
										<TextBlock Text="{Binding Description}" VerticalAlignment="Center" Margin="16 0 0 0" />
									</StackPanel>
								</Grid>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
				</DockPanel>
			</materialDesign:DrawerHost.LeftDrawerContent>

			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<!--  Top bar  -->
				<materialDesign:ColorZone Grid.Row="0"
										  Mode="PrimaryDark"
										  Padding="0"
										  materialDesign:ShadowAssist.ShadowDepth="Depth2">
					<StackPanel>
						<DockPanel Margin="16 16 8 16">
							<!-- HamburgerMenu -->
							<ToggleButton DockPanel.Dock="Left"  x:Name="MenuToggleButton" Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />

							<!-- Popup box -->
							<materialDesign:PopupBox DockPanel.Dock="Right"
													 Margin="0"
													 PlacementMode="LeftAndAlignTopEdges"
													 StaysOpen="False">
								<StackPanel MinWidth="200">
									<TextBlock Margin="12" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" TextTrimming="CharacterEllipsis" Text="Bloo"/>
									<Separator Margin="16,0" />
									<MenuItem Header="Settings" ToolTip="Settings" Command="{Binding ShowSettingsCommand}">
										<MenuItem.Icon>
											<materialDesign:PackIcon Kind="Settings" />
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="About" ToolTip="About" Command="{Binding ShowAboutCommand}">
										<MenuItem.Icon>
											<materialDesign:PackIcon Kind="InformationOutline" />
										</MenuItem.Icon>
									</MenuItem>
								</StackPanel>
							</materialDesign:PopupBox>

							<!--  Query  -->
							<materialDesign:Card MaxWidth="700">
								<DockPanel>
									<Button DockPanel.Dock="Right"
										Margin="6"
										Padding="4"
										Command="{Binding GetDataCommand}"
										IsDefault="True"
										Style="{DynamicResource MaterialDesignFlatButton}">
										<materialDesign:PackIcon Width="24" Height="24" Kind="ArrowRight" />
									</Button>
									
									<TextBox Grid.Column="0"
										 x:Name="QueryTextBox"
										 Margin="10 6 0 6"
										 materialDesign:HintAssist.Hint="Youtube video/playlist URL or ID"
										 materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
										 BorderThickness="0"
										 FontSize="16"
										 Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}" />
								</DockPanel>
							</materialDesign:Card>
						</DockPanel>

						<!--  Loading Progress Bar  -->
						<ProgressBar Background="Transparent"
									 Height="5"
									 IsIndeterminate="{Binding IsProgressIndeterminate}"
									 Value="{Binding Progress, Mode=OneWay}" />
					</StackPanel>
				</materialDesign:ColorZone>

				<!--  Core Content  -->
				<Grid Grid.Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition MaxWidth="600" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<!--  Video list  -->
					<materialDesign:Card VerticalAlignment="Stretch"
										 Margin="8"
										 Visibility="{Binding IsDataAvailable, Converter={StaticResource BoolToVisibilityConverter}}">
						<DockPanel Grid.Column="0">
							<Button DockPanel.Dock="Top"
								Margin="6"
								ToolTip="Download All"
								Command="{Binding DownloadAllCommand}"
								Style="{DynamicResource MaterialDesignFlatButton}">
								<StackPanel Orientation="Horizontal">
									<materialDesign:PackIcon Kind="Download" Margin="0 0 6px 0" />
									<TextBlock Text="Download all as mp3" />
								</StackPanel>
							</Button>

							<ListBox Grid.Column="0"
								 x:Name="VideoList"
								 Margin="0 8 0 0"
								 ItemsSource="{Binding SearchList}">
								<ListBox.ItemTemplate>
									<DataTemplate DataType="explodeModels:Video">
										<StackPanel Orientation="Horizontal">
											<Rectangle Grid.Column="0"
													   Width="6"
													   Fill="{DynamicResource SecondaryAccentBrush}"
													   Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" />

											<!--  Thumbnail image  -->
											<Image Height="50"
												   Margin="12px 6px"
												   VerticalAlignment="Top"
												   Source="{Binding Thumbnails.LowResUrl}" />

											<TextBlock Text="{Binding Title}"
													   VerticalAlignment="Center" />
										</StackPanel>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</DockPanel>
					</materialDesign:Card>

					<!--  Video info  -->
					<views:VideoCard Grid.Column="1"
									 Margin="16"
									 DataContext="{Binding Path=SelectedItem, ElementName=VideoList}"
									 Visibility="{Binding Path=SelectedItem, ElementName=VideoList, Converter={StaticResource NullToVisibilityConverter}}" />
				</Grid>

				<!--  Bottom bar  -->
				<materialDesign:Card Grid.Row="2"
									 Padding="16 8">
					<DockPanel>
						<Label DockPanel.Dock="Left" Content="{Binding Status}" VerticalAlignment="Center" />
						<Button DockPanel.Dock="Right"
								Style="{StaticResource MaterialDesignFlatAccentButton}"
								Content="{Binding Product}"
								Command="{Binding ShowAboutCommand}"
								HorizontalAlignment="Right" />
					</DockPanel>
				</materialDesign:Card>

				<!--  Snacky bar  -->
				<materialDesign:Snackbar Grid.Row="2" x:Name="MainSnackbar" />
			</Grid>
		</materialDesign:DrawerHost>
	</materialDesign:DialogHost>
</Window>
